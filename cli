#!/usr/bin/env node

require("reflect-metadata");
const path        = require("path");
const Environment = require("./dist/AppContainer/Config/Environment").default;

Environment.load(path.join(__dirname, ".env"));

const {Envuso}                 = require("./dist");
const Log                      = require("./dist/Common/Logger/Log").default;
const {ConsoleServiceProvider} = require("./dist/Console/ConsoleServiceProvider");
console.log(Environment);

Log.disable();

const envuso = new Envuso();

const runFrameworkLogic = async (dev = false, logic) => {

	const moduleImport = await (dev ? import('./src/Config/Configuration')
			: import(path.join(process.cwd(), 'dist', 'Config', 'Configuration.js')));

	moduleImport.default.initiate()
			.then(() => envuso.initiateWithoutServing([
				ConsoleServiceProvider
			]))
			.then(() => logic())
			.then(() => process.exit())
			.catch(error => {
				console.error(error);
			});
};

runFrameworkLogic(true, async () => {
	debugger
});
