/**
 * *INSERT FLASHING WARNING LIGHTS*
 *
 * THIS FILE IS AUTOMATICALLY GENERATED
 * DO NOT EDIT IT, YOUR CHANGES WILL BE OVER-WRITTEN ON BUILD.
 *
 * This data is based on your configuration files in /src/Config/.
 * To make changes here, edit your config files or create a new one.
 */
import { AppConfiguration } from "../Config/AppConfiguration";
import { AuthConfiguration } from "../Config/AuthConfiguration";
import { DatabaseConfiguration } from "../Config/DatabaseConfiguration";
import { FilesystemPathsConfiguration } from "../Config/FilesystemPathsConfiguration";
import { SerializationConfiguration } from "../Config/SerializationConfiguration";
import { ServerConfiguration } from "../Config/ServerConfiguration";
import { ServicesConfiguration } from "../Config/ServicesConfiguration";
import { SessionConfiguration } from "../Config/SessionConfiguration";
import { StorageConfiguration } from "../Config/StorageConfiguration";
import { WebsocketsConfiguration } from "../Config/WebsocketsConfiguration";
import { AppConfigurationInterface } from "./ConfigContracts/AppConfigurationInterface";
import { AuthConfigurationInterface } from "./ConfigContracts/AuthConfigurationInterface";
import { DatabaseConfigurationInterface } from "./ConfigContracts/DatabaseConfigurationInterface";
import { FilesystemPathsConfigurationInterface } from "./ConfigContracts/FilesystemPathsConfigurationInterface";
import { SerializationConfigurationInterface } from "./ConfigContracts/SerializationConfigurationInterface";
import { ServerConfigurationInterface } from "./ConfigContracts/ServerConfigurationInterface";
import { ServicesConfigurationInterface } from "./ConfigContracts/ServicesConfigurationInterface";
import { SessionConfigurationInterface } from "./ConfigContracts/SessionConfigurationInterface";
import { StorageConfigurationInterface } from "./ConfigContracts/StorageConfigurationInterface";
import { WebsocketsConfigurationInterface } from "./ConfigContracts/WebsocketsConfigurationInterface";

export const Config = {
    "App": new AppConfiguration(process.env),
    "Auth": new AuthConfiguration(process.env),
    "Database": new DatabaseConfiguration(process.env),
    "FilesystemPaths": new FilesystemPathsConfiguration(process.env),
    "Serialization": new SerializationConfiguration(process.env),
    "Server": new ServerConfiguration(process.env),
    "Services": new ServicesConfiguration(process.env),
    "Session": new SessionConfiguration(process.env),
    "Storage": new StorageConfiguration(process.env),
    "Websockets": new WebsocketsConfiguration(process.env)
};

export type ConfigHelperKeys = {
    "App": AppConfigurationInterface;
    "Auth": AuthConfigurationInterface;
    "Database": DatabaseConfigurationInterface;
    "FilesystemPaths": FilesystemPathsConfigurationInterface;
    "Serialization": SerializationConfigurationInterface;
    "Server": ServerConfigurationInterface;
    "Services": ServicesConfigurationInterface;
    "Session": SessionConfigurationInterface;
    "Storage": StorageConfigurationInterface;
    "Websockets": WebsocketsConfigurationInterface;
};

export type ConfigMap = {
    App: AppConfigurationInterface;
    Auth: AuthConfigurationInterface;
    Database: DatabaseConfigurationInterface;
    FilesystemPaths: FilesystemPathsConfigurationInterface;
    Serialization: SerializationConfigurationInterface;
    Server: ServerConfigurationInterface;
    Services: ServicesConfigurationInterface;
    Session: SessionConfigurationInterface;
    Storage: StorageConfigurationInterface;
    Websockets: WebsocketsConfigurationInterface;
};

export const getConfig = <T extends keyof (typeof Config)>(file: T): (typeof Config)[T] => Config[file];